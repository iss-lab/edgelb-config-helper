// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1RewriteHTTPResponse Rewrite the response.
// To use the default values (recommended), set this field to the empty object.
//
// swagger:model V1RewriteHttpResponse
type V1RewriteHTTPResponse struct {

	// rewrite location
	RewriteLocation *bool `json:"rewriteLocation,omitempty"`
}

func (m *V1RewriteHTTPResponse) UnmarshalJSON(b []byte) error {
	type V1RewriteHTTPResponseAlias V1RewriteHTTPResponse
	var t V1RewriteHTTPResponseAlias
	if err := json.Unmarshal([]byte("{\"rewriteLocation\":true}"), &t); err != nil {
		return err
	}
	if err := json.Unmarshal(b, &t); err != nil {
		return err
	}
	*m = V1RewriteHTTPResponse(t)
	return nil
}

// Validate validates this v1 rewrite Http response
func (m *V1RewriteHTTPResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1RewriteHTTPResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1RewriteHTTPResponse) UnmarshalBinary(b []byte) error {
	var res V1RewriteHTTPResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
