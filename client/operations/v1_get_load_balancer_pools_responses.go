// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/iss-lab/edgelb-config-helper/models"
)

// V1GetLoadBalancerPoolsReader is a Reader for the V1GetLoadBalancerPools structure.
type V1GetLoadBalancerPoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1GetLoadBalancerPoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1GetLoadBalancerPoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewV1GetLoadBalancerPoolsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1GetLoadBalancerPoolsOK creates a V1GetLoadBalancerPoolsOK with default headers values
func NewV1GetLoadBalancerPoolsOK() *V1GetLoadBalancerPoolsOK {
	return &V1GetLoadBalancerPoolsOK{}
}

/*V1GetLoadBalancerPoolsOK handles this case with default header values.

An array of load balancer pools.
*/
type V1GetLoadBalancerPoolsOK struct {
	Payload []*models.V1Pool
}

func (o *V1GetLoadBalancerPoolsOK) Error() string {
	return fmt.Sprintf("[GET /v1/loadbalancers][%d] v1GetLoadBalancerPoolsOK  %+v", 200, o.Payload)
}

func (o *V1GetLoadBalancerPoolsOK) GetPayload() []*models.V1Pool {
	return o.Payload
}

func (o *V1GetLoadBalancerPoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1GetLoadBalancerPoolsDefault creates a V1GetLoadBalancerPoolsDefault with default headers values
func NewV1GetLoadBalancerPoolsDefault(code int) *V1GetLoadBalancerPoolsDefault {
	return &V1GetLoadBalancerPoolsDefault{
		_statusCode: code,
	}
}

/*V1GetLoadBalancerPoolsDefault handles this case with default header values.

Unexpected error.
*/
type V1GetLoadBalancerPoolsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the v1 get load balancer pools default response
func (o *V1GetLoadBalancerPoolsDefault) Code() int {
	return o._statusCode
}

func (o *V1GetLoadBalancerPoolsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/loadbalancers][%d] V1GetLoadBalancerPools default  %+v", o._statusCode, o.Payload)
}

func (o *V1GetLoadBalancerPoolsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *V1GetLoadBalancerPoolsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
