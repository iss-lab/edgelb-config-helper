// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// V1UpdateLoadBalancerArtifactReader is a Reader for the V1UpdateLoadBalancerArtifact structure.
type V1UpdateLoadBalancerArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1UpdateLoadBalancerArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1UpdateLoadBalancerArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewV1UpdateLoadBalancerArtifactDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV1UpdateLoadBalancerArtifactOK creates a V1UpdateLoadBalancerArtifactOK with default headers values
func NewV1UpdateLoadBalancerArtifactOK() *V1UpdateLoadBalancerArtifactOK {
	return &V1UpdateLoadBalancerArtifactOK{}
}

/*V1UpdateLoadBalancerArtifactOK handles this case with default header values.

Updated configuration artifact for load balancer pool.
*/
type V1UpdateLoadBalancerArtifactOK struct {
	Payload string
}

func (o *V1UpdateLoadBalancerArtifactOK) Error() string {
	return fmt.Sprintf("[PUT /v1/loadbalancers/{name}/artifacts/{artifactName}][%d] v1UpdateLoadBalancerArtifactOK  %+v", 200, o.Payload)
}

func (o *V1UpdateLoadBalancerArtifactOK) GetPayload() string {
	return o.Payload
}

func (o *V1UpdateLoadBalancerArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1UpdateLoadBalancerArtifactDefault creates a V1UpdateLoadBalancerArtifactDefault with default headers values
func NewV1UpdateLoadBalancerArtifactDefault(code int) *V1UpdateLoadBalancerArtifactDefault {
	return &V1UpdateLoadBalancerArtifactDefault{
		_statusCode: code,
	}
}

/*V1UpdateLoadBalancerArtifactDefault handles this case with default header values.

Unexpected error.
*/
type V1UpdateLoadBalancerArtifactDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the v1 update load balancer artifact default response
func (o *V1UpdateLoadBalancerArtifactDefault) Code() int {
	return o._statusCode
}

func (o *V1UpdateLoadBalancerArtifactDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/loadbalancers/{name}/artifacts/{artifactName}][%d] V1UpdateLoadBalancerArtifact default  %+v", o._statusCode, o.Payload)
}

func (o *V1UpdateLoadBalancerArtifactDefault) GetPayload() string {
	return o.Payload
}

func (o *V1UpdateLoadBalancerArtifactDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
