// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/iss-lab/edgelb-config-helper/models"
)

// NewV1UpdateLoadBalancerPoolParams creates a new V1UpdateLoadBalancerPoolParams object
// with the default values initialized.
func NewV1UpdateLoadBalancerPoolParams() *V1UpdateLoadBalancerPoolParams {
	var ()
	return &V1UpdateLoadBalancerPoolParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV1UpdateLoadBalancerPoolParamsWithTimeout creates a new V1UpdateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV1UpdateLoadBalancerPoolParamsWithTimeout(timeout time.Duration) *V1UpdateLoadBalancerPoolParams {
	var ()
	return &V1UpdateLoadBalancerPoolParams{

		timeout: timeout,
	}
}

// NewV1UpdateLoadBalancerPoolParamsWithContext creates a new V1UpdateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a context for a request
func NewV1UpdateLoadBalancerPoolParamsWithContext(ctx context.Context) *V1UpdateLoadBalancerPoolParams {
	var ()
	return &V1UpdateLoadBalancerPoolParams{

		Context: ctx,
	}
}

// NewV1UpdateLoadBalancerPoolParamsWithHTTPClient creates a new V1UpdateLoadBalancerPoolParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV1UpdateLoadBalancerPoolParamsWithHTTPClient(client *http.Client) *V1UpdateLoadBalancerPoolParams {
	var ()
	return &V1UpdateLoadBalancerPoolParams{
		HTTPClient: client,
	}
}

/*V1UpdateLoadBalancerPoolParams contains all the parameters to send to the API endpoint
for the v1 update load balancer pool operation typically these are written to a http.Request
*/
type V1UpdateLoadBalancerPoolParams struct {

	/*LoadBalancer*/
	LoadBalancer *models.V1Pool
	/*Name*/
	Name string
	/*Token
	  DCOS Auth Token

	*/
	Token *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithTimeout(timeout time.Duration) *V1UpdateLoadBalancerPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithContext(ctx context.Context) *V1UpdateLoadBalancerPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithHTTPClient(client *http.Client) *V1UpdateLoadBalancerPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLoadBalancer adds the loadBalancer to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithLoadBalancer(loadBalancer *models.V1Pool) *V1UpdateLoadBalancerPoolParams {
	o.SetLoadBalancer(loadBalancer)
	return o
}

// SetLoadBalancer adds the loadBalancer to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetLoadBalancer(loadBalancer *models.V1Pool) {
	o.LoadBalancer = loadBalancer
}

// WithName adds the name to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithName(name string) *V1UpdateLoadBalancerPoolParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetName(name string) {
	o.Name = name
}

// WithToken adds the token to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) WithToken(token *string) *V1UpdateLoadBalancerPoolParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the v1 update load balancer pool params
func (o *V1UpdateLoadBalancerPoolParams) SetToken(token *string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *V1UpdateLoadBalancerPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LoadBalancer != nil {
		if err := r.SetBodyParam(o.LoadBalancer); err != nil {
			return err
		}
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Token != nil {

		// header param token
		if err := r.SetHeaderParam("token", *o.Token); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
