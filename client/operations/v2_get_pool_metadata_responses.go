// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/iss-lab/edgelb-config-helper/models"
)

// V2GetPoolMetadataReader is a Reader for the V2GetPoolMetadata structure.
type V2GetPoolMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2GetPoolMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2GetPoolMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewV2GetPoolMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewV2GetPoolMetadataGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewV2GetPoolMetadataDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2GetPoolMetadataOK creates a V2GetPoolMetadataOK with default headers values
func NewV2GetPoolMetadataOK() *V2GetPoolMetadataOK {
	return &V2GetPoolMetadataOK{}
}

/*V2GetPoolMetadataOK handles this case with default header values.

Rendered lb config for pool.
*/
type V2GetPoolMetadataOK struct {
	Payload *models.V2PoolMetadata
}

func (o *V2GetPoolMetadataOK) Error() string {
	return fmt.Sprintf("[GET /v2/pools/{name}/metadata][%d] v2GetPoolMetadataOK  %+v", 200, o.Payload)
}

func (o *V2GetPoolMetadataOK) GetPayload() *models.V2PoolMetadata {
	return o.Payload
}

func (o *V2GetPoolMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V2PoolMetadata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPoolMetadataNotFound creates a V2GetPoolMetadataNotFound with default headers values
func NewV2GetPoolMetadataNotFound() *V2GetPoolMetadataNotFound {
	return &V2GetPoolMetadataNotFound{}
}

/*V2GetPoolMetadataNotFound handles this case with default header values.

Pool not found.
*/
type V2GetPoolMetadataNotFound struct {
	Payload string
}

func (o *V2GetPoolMetadataNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/pools/{name}/metadata][%d] v2GetPoolMetadataNotFound  %+v", 404, o.Payload)
}

func (o *V2GetPoolMetadataNotFound) GetPayload() string {
	return o.Payload
}

func (o *V2GetPoolMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPoolMetadataGatewayTimeout creates a V2GetPoolMetadataGatewayTimeout with default headers values
func NewV2GetPoolMetadataGatewayTimeout() *V2GetPoolMetadataGatewayTimeout {
	return &V2GetPoolMetadataGatewayTimeout{}
}

/*V2GetPoolMetadataGatewayTimeout handles this case with default header values.

No metadata for pool.
*/
type V2GetPoolMetadataGatewayTimeout struct {
	Payload string
}

func (o *V2GetPoolMetadataGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /v2/pools/{name}/metadata][%d] v2GetPoolMetadataGatewayTimeout  %+v", 504, o.Payload)
}

func (o *V2GetPoolMetadataGatewayTimeout) GetPayload() string {
	return o.Payload
}

func (o *V2GetPoolMetadataGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPoolMetadataDefault creates a V2GetPoolMetadataDefault with default headers values
func NewV2GetPoolMetadataDefault(code int) *V2GetPoolMetadataDefault {
	return &V2GetPoolMetadataDefault{
		_statusCode: code,
	}
}

/*V2GetPoolMetadataDefault handles this case with default header values.

Unexpected error.
*/
type V2GetPoolMetadataDefault struct {
	_statusCode int

	Payload string
}

// Code gets the status code for the v2 get pool metadata default response
func (o *V2GetPoolMetadataDefault) Code() int {
	return o._statusCode
}

func (o *V2GetPoolMetadataDefault) Error() string {
	return fmt.Sprintf("[GET /v2/pools/{name}/metadata][%d] V2GetPoolMetadata default  %+v", o._statusCode, o.Payload)
}

func (o *V2GetPoolMetadataDefault) GetPayload() string {
	return o.Payload
}

func (o *V2GetPoolMetadataDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
